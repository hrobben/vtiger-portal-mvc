<?php

class Index_Model extends Model {

	private $action = '';

    public function __construct() {
        parent::__construct();
    }

    public function run()
    {
    	// return $_SESSION;
    	// hier moeten straks de $module en $block op tabArray[0] gezet worden.
	}

	public function accounts($action = 'index', $onlymine = 'true')
    {
    	$list = $this->fillblock_header('index/Accounts/index/true');
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = 'Accounts';
    	Session::set('tabArray',$block);

        $client = $this->soap_client();
		$params = Array('id'=>$customerid);
		$accountid = $client->call('get_check_account_id', $params, SERVER_PATH, SERVER_PATH);

        $client = $this->soap_client();
        $params = array('id' => "$accountid", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
        $result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);

        // Check for Authorization
        if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
            $list .= '<tr>
                <td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
            	</tr>
            	</table></td></tr></table></td></tr></table>';
            	Session::set('loggedIn', 'false');
            header('location: '.URL.'login');;
        }
        $noteinfo = $result[0][$block];
        $list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
        $list .= $this->getblock_fieldlist($noteinfo);

        $list .= '</table></td></tr>';
        $list .= '</table></td></tr></table></td></tr></table>';
        $list .= '<!-- --End--  -->';
        $list .= '';

        return $list;
    }

	private function fillblock_header($action = '')
	{
        $list = '<table class="dvtContentSpace" border="0" cellpadding="0" cellspacing="0" width="100%">
                   <tr>
                    <td align="left">
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                          <form name="index" method="post" action="'.URL.$action.'">
                          <input type="hidden" name="module">
                          <input type="hidden" name="action">
                          <input type="hidden" name="fun">
                          <tr>
                            <td style="padding:5px;">';
		return $list;
	}

    public static function soap_client()
    {
        return parent::soap_client(); // TODO: Change the autogenerated stub
    }

	// The function to get html format list data
	// input array
	// output htmlsource list array
	// only for product

	private function getblock_fieldlist($block_array)
	{
		$list='';$z=0;
		$field_count=count($block_array);
		if($field_count != 0)
		{
			for($i=0;$i<$field_count;$i++,$z++)
			{
				$blockname = $block_array[$i]['blockname'];
				$data = $block_array[$i]['fieldvalue'];
				if($block_array[$i]['fieldlabel'] == 'Note'){
	    			$data = html_entity_decode($data);
	    		}
	    		if($data =='')
					$data ='&nbsp;';
				if(stristr($data,'href') && stristr($data, 'Invoice')) {
					$data = $this->repl_href_pdf($data);
				} elseif (stristr($data,'href')) {
					$data = $this->replace_href($data);
				}
				if(strcmp($blockname,$block_array[$i]['blockname'])){  // was [$i-1]
					if($blockname != 'Ticket Information') //hardcoded for tickets information block so that it ll not be displayed
						$list .= $this->getblock_header($blockname);
					$z = 0;
				}
				if($z==0 || $z%2==0)
				$list .= '<tr>';
				$list .= '<td class="dvtCellLabel" width="20%" align="right">'.lang::get($block_array[$i]['fieldlabel']).'</td>';
				if(($z == 0 || $z%2 == 0) &&($i == ($field_count-1)))
					$list .= '<td colspan="3" width="20%" class="dvtCellInfo">'.$data.'</td>';
				else
					$list .= '<td width="20%" class="dvtCellInfo">'.$data.'</td>';
				if($z%2 == 1 ||($i == ($field_count-1) ))
					$list .= '</tr>';
			}
		}
		$list.= '<tr><td colspan="4">&nbsp;</td></tr>';
		return $list;
	}

	private function repl_href_pdf($data)
	{
		$data = str_replace('index.php?downloadfile=true&module=Invoice&action=index&id=', URL.'index/Invoice/true/index/false/', $data);
		return $data;
	}
	// replace the vtiger url on linked items with MVC url's wit strReplace...
	// <a href="index.php?module=Contacts&action=index&id=9">Henry</a>
	// <a href="index.php?module=Accounts&action=index&id=15660">demo</a>
	// bij documents andere url indeling voorbeeld:
	// http://localhost/helpdesk-n/index.php?& downloadfile=true&folderid=1&filename=com_vtpaccounts.zip& module=Documents&action=index&id=2211
	// aanpassen om juiste volgorde:
	// http://localhost/mvc/index/Documents/true/index/2658/filname.zip/1  (folderid)
	private function replace_href($data)
	{
		$data = str_replace('?&', '?', $data);
		$data = str_replace('index.php?module=', URL.'index/', $data);
		$data = str_replace('&action=', '/true/', $data);
		$data = str_replace('&id=', '/', $data);
		$data = str_replace('&productid=', '/', $data);
		$data = str_replace('&status=', '/', $data);
		$data = str_replace('&filename=','/', $data);
		$data = str_replace('&folderid=','/', $data);
		$data = str_replace('&module=Documents','', $data);
		$data = str_replace('&module=','/', $data);
		$data = str_replace('&downloadfile=','/', $data);
		$data = str_replace('index.php?downloadfile=', URL.'index/Documents/', $data);
		return $data;
	}

	// The function to get html format list data
	// input array
	// output htmlsource list array
	// for quotes,notes and invoice

	private function getblock_header($str,$headerspan='4',$ticketcloselink=false)
	{
		$list = '';
		if ($ticketcloselink == true) {
			$list .='<tr><td colspan="'. ($headerspan-1) .'" class="detailedViewHeader"><b>'.lang::get($str).'</b></td>';
			$list .='<td class="detailedViewHeader"><div align="right">'.$ticketcloselink.'</div></td></tr>';
		} else {
			$list .='<tr><td colspan="'. ($headerspan) .'" class="detailedViewHeader"><b>'.lang::get($str).'</b></td></tr>';
		}
		return $list;

	}

    public function contacts($action, $onlymine, $id)
    {
    	$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = 'Contacts';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			if ($customerid != '')
			{
				$list .= '<tr>
				 			<td><span class="lvtHeaderText">'.lang::get("LBL_CONTACTS").'</span</td>';
				$allow_all = $client->call('show_all',array('module'=>'Contacts'),SERVER_PATH, SERVER_PATH);

			    if($allow_all == 'true'){
			      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; <select name="list_type" onchange="getList(this, \'Contacts\');">
			 			<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
						<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
						</select></td></tr>';
			    		}

				$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
				<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';

				$block = "Contacts";
				$sessionid = $_SESSION['customer_sessionid'];

				$params = array('id' => "$customerid", 'block'=>"$block",'sessionid'=>"$sessionid",'onlymine'=>$onlymine);
				$result = $client->call('get_list_values', $params, SERVER_PATH, SERVER_PATH);
				// Check for Authorization
				if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
					$list .= '<tr>
						<td colspan="6" align="center"><b>'.lang::get("LBL_NOT_AUTHORISED").'</b></td>
					</tr></table></td></tr></table></td></tr></table>';
            		Session::set('loggedIn', 'false');
					header('location: '.URL.'login');;
				}
				//print_r($result);
				$list .= $this->getblock_fieldlistview($result,$block);
			}
		}
		else
		{
			$list .= '';
			$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
					<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
				</tr></table></td></tr></table></td></tr></table>';
				header('location: '.URL.'login');;
			}
			$noteinfo = $result[0][$block];
			$list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
			$list .= $this->getblock_fieldlist($noteinfo);

			$list .= '</table></td></tr>';
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';
		}

		$list .= '</table> </td></tr></table></td></tr></table>';

		return $list;
    }

	private function getblock_fieldlistview($block_array,$block)
	{
		$list = '';
		if($block_array[0] == "#MODULE INACTIVE#"){
			$list.='<tr><td>'.lang::get($block)." ".lang::get('MODULE_INACTIVE').'</td></tr>';
			return $list;
		}
		if($block_array == ''){
			$list.='<tr><td>'.lang::get($block)." ".lang::get('LBL_NOT_AVAILABLE').'</td></tr>';
			return $list;
		}
		$header_arr =$block_array[0][$block]['head'][0];
		$nooffields=count($header_arr);
		$data_arr=$block_array[1][$block]['data'];
		$noofdata=count($data_arr);
		//print_r($data_arr);
		if($nooffields!='')
		{
			$list .='<tr align="center">';
			for($i=0;$i<$nooffields;$i++)
				$list .= "<td  class='detailedViewHeader' >".lang::get($header_arr[$i]['fielddata'])."</td>";
			$list .='</tr>';
		}
		if($noofdata != '')
		{
			for($j=0;$j<$noofdata;$j++)
			{
				if($j==0 || $j%2==0)
					$list .='<tr class="dvtLabel">';
				else
					$list .='<tr class="dvtInfo">';

				for($i=0;$i<$nooffields;$i++)
				{
					$data =$data_arr[$j][$i]['fielddata'];
					if($data == '')
						$data ='&nbsp;';
					if(stristr($data,'href'))
						$data = $this->replace_href($data);
					$list .= "<td>".$data."</td>";
				}
				$list .='</tr>';
			}

	        $list .= '<tr><td colspan ="'.$nooffields.'">&nbsp;</td></tr>';
		}
	return $list;
	}

    public function project($action, $onlymine, $id)
    {
    	$list = $this->fillblock_header(''); // action moet hier leeg zijn.
    	$this->action = $action;
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = 'Project';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			if ($customerid != '')
			{
				$list .= '<tr>
			 			<td><span class="lvtHeaderText">'.lang::get("LBL_PROJECT_INFORMATION").'</span</td>';    
				$allow_all = $client->call('show_all',array('module'=>'Project'),SERVER_PATH, SERVER_PATH);
				
			    if($allow_all == 'true'){
		      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; 
		      									<select name="list_type" onchange="getList(this, \'Project\');">
		 					<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
							<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
							</select></td>
						</tr>';
		    		}
		      	// Check for Authorization
				$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
				<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';

				$block = "Project";
				$params = array('id' => "$customerid", 'block'=>"$block",'sessionid'=>$sessionid,'onlymine'=>$onlymine);
				$result = $client->call('get_list_values', $params, SERVER_PATH, SERVER_PATH);
				if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
					$list .= '<tr>
						<td colspan="6" align="center"><b>'.lang::get("LBL_NOT_AUTHORISED").'</b></td>
					</tr></table></td></tr></table></td></tr></table>';
	            	Session::set('loggedIn', 'false');
				header('location: '.URL.'login');;
				}	
				$list .= $this->getblock_fieldlistview($result,$block);
			}
		}
		else
		{
			$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
					<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
					</tr>
					</table></td></tr></table></td></tr></table>';
				header('location: '.URL.'login');;
			}
			$projectinfo = $result[0][$block];
			$list .= '<tr><td colspan="4"><table width="100%"><tr>
					<td align="left"><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td>
					<td align="right"><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_RAISE_TICKET_BUTTON').'" onclick="location.href=\'index.php?module=HelpDesk&action=index&fun=newticket&projectid='.$id.'\'"/></td>
				</tr></table></td></tr>';
			$list .= $this->getblock_fieldlist($projectinfo);
			
			$projecttaskblock = 'ProjectTask';
			$params = array('id' => "$id", 'block'=>"$projecttaskblock",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_project_components', $params, SERVER_PATH, SERVER_PATH);	
			$list .= '<tr><td class="detailedViewHeader" colspan="4"><b>'.lang::get('LBL_PROJECT_TASKS').'</b></td></tr>';
			$list .= '<tr><td colspan="4"><table border="0" width="100%" cellspacing="0" cellpadding="5">';
			$list .= $this->getblock_fieldlistview($result,"$projecttaskblock");	
			$list .= '</table></td></tr>';
			
			$list .= '<tr><td colspan="4">&nbsp;</td></tr>';
			
			$projectmilestoneblock = 'ProjectMilestone';
			$params = array('id' => "$id", 'block'=>"$projectmilestoneblock",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_project_components', $params, SERVER_PATH, SERVER_PATH);	
			$list .= '<tr><td class="detailedViewHeader" colspan="4"><b>'.lang::get('LBL_PROJECT_MILESTONES').'</b></td></tr>';
			$list .= '<tr><td colspan="4"><table border="0" width="100%" cellspacing="0" cellpadding="5">';
			$list .= $this->getblock_fieldlistview($result,"$projectmilestoneblock");	
			$list .= '</table></td></tr>';
			
			$list .= '<tr><td colspan="4">&nbsp;</td></tr>';
			
			$projectticketsblock = 'HelpDesk';
			$params = array('id' => "$id", 'block'=>"$projectticketsblock",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_project_tickets', $params, SERVER_PATH, SERVER_PATH);	
			$list .= '<tr><td class="detailedViewHeader" colspan="4"><b>'.lang::get('LBL_PROJECT_TICKETS').'</b></td></tr>';
			$list .= '<tr><td colspan="4"><table border="0" width="100%" cellspacing="0" cellpadding="5">';
			$list .= $this->getblock_fieldlistview($result,"$projectticketsblock");		
			$list .= '</table></td></tr>';
			$list .= '</table></td></tr>';	
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';
		}

		
    	return $list;
    }

    public function services($action, $onlymine, $id)
    {
		$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = 'Services';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();
		
		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}


			$module = 'Services';	

			$params = Array('id'=>$customerid,'module'=>$module,'sessionid'=>$sessionid,'onlymine'=>$onlymine);
			$result = $client->call('get_service_list_values', $params, SERVER_PATH, SERVER_PATH);

			$list .= '<tr>
	 			<td><span class="lvtHeaderText">'.lang::get("LBL_SERVICE").'</span</td>';    
			$allow_all = $client->call('show_all',array('module'=>$module),SERVER_PATH, SERVER_PATH);
		
		    if($allow_all == 'true'){
	      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; <select name="list_type" onchange="getList(this, \'Services\');">
	 			<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
				<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
				</select></td></tr>';
	    		}
	      		
	      	$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
	      			<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';;

			$list .= $this->getblock_fieldlistview_product($result,$module);
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';
		}
		else 
		{
			$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
					<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
				</tr></table></td></tr></table></td></tr></table>';
				header('location: '.URL.'login');;
			}	
			$serviceinfo = $result[0][$block];

		    $list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
			$list .= $this->getblock_fieldlist($serviceinfo );
			$list .= '</table></td></tr>';	
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';

		}    
		$list .= '</table> </td></tr></table></td></tr></table>';	

		return $list;
    }

	private function getblock_fieldlistview_product($block_array,$module)
	{
	 $list = '';
     $nooffields = '';
	 $header[0] = lang::get($module);
	 $header[1] = lang::get('QUOTE_RELATED').lang::get($module);
	 $header[2] = lang::get('INVOICE_RELATED').lang::get($module);

	 if($block_array == '')
	 {
		$list.='<tr><td>'.$module." ".lang::get('LBL_NOT_AVAILABLE').'</td></tr>';
		return $list;
	 }
	for($k=0;$k<=2;$k++)
	{
		if($block_array[$k][$module]['data'] == ''){
			$list.='<tr><td>'.$header[$k]." ".lang::get('LBL_NOT_AVAILABLE').'</td></tr>';
		}
		else
		{
			$header_arr = $block_array[$k][$module]['head'][0];
			$nooffields=count($header_arr);
			$data_arr=$block_array[$k][$module]['data'];
			$noofdata=count($data_arr);
			$list.=$this->getblock_header($header[$k],$nooffields);

			if($nooffields!='')
			{
				$list .='<tr class="detailedViewHeader" align="center">';
				for($i=0;$i<$nooffields;$i++)
					$list .= "<td>".lang::get($header_arr[$i]['fielddata'])."</td>";
				$list .='</tr>';
			}
			if($noofdata != '')
			{
				for($j=0;$j<$noofdata;$j++)
				{
					if($j==0||$j%2==0)
						$list .='<tr class="dvtLabel">';
					else
						$list .='<tr class="dvtInfo">';

					for($i=0;$i<$nooffields;$i++)
					{
						$data =$data_arr[$j][$i]['fielddata'];
						if($data == '')
							$data ='&nbsp;';
						if(stristr($data,'href'))
							$data = $this->replace_href($data);
						$list .= "<td>".$data."</td>";
					}
					$list .='</tr>';
				}
			}
		}
	    $list .= '<tr><td colspan ="'.$nooffields.'">&nbsp;</td></tr>';
	}
	return $list;
	}

    public function assets($action, $onlymine, $id)
    {
    	//print_r($_SESSION);
		$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = 'Assets';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			$module = $block;

			$list .= '<tr>
				 	<td><span class="lvtHeaderText">'.lang::get("LBL_ASSET_INFORMATION").'</span</td>';
			$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
					<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';

			if ($customerid != '' ) {
				$params = array('id' => "$customerid", 'block'=>"$block",'sessionid'=>$sessionid);
				$result = $client->call('get_list_values', $params, SERVER_PATH, SERVER_PATH);
				$list .= $this->getblock_fieldlistview($result,$block);
			}
		}
		else
		{
			$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
					<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
				</tr></table></td></tr></table></td></tr></table>';
				header('location: '.URL.'login');;
			}
			$assetinfo = $result[0][$block];

		    $list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
			$list .= $this->getblock_fieldlist($assetinfo);

			$list .= '</table></td></tr>';
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';
		}
		$list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
    }

    public function products($action, $onlymine, $id)
    {
    	//print_r($_SESSION);
		$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = 'Products';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			$module = $block;
			$params = Array('id'=>$customerid,'block'=>$block,'sessionid'=>$sessionid,'onlymine'=>$onlymine);
			$result = $client->call('get_product_list_values', $params, SERVER_PATH, SERVER_PATH);

			$list .= '<tr>
	 				<td><span class="lvtHeaderText">'.lang::get("LBL_PRODUCT_INFORMATION").'</span</td>';
			$allow_all = $client->call('show_all',array('module'=>'Products'),SERVER_PATH, SERVER_PATH);

	    	if($allow_all == 'true'){
	      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; <select name="list_type" onchange="getList(this, \'Products\');">
	 			<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
				<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
				</select></td></tr>';
	    		}

	      	$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
	      			<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';;

			$list .= $this->getblock_fieldlistview_product($result,$block);
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';
		}
		else
		{
			$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
					<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
					</tr></table></td></tr></table></td></tr></table>';
            	Session::set('loggedIn', 'false');
				header('location: '.URL.'login');;
			}
			$noteinfo = $result[0][$block];
			$list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
			$list .= $this->getblock_fieldlist($noteinfo);

			$list .= '</table></td></tr>';
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';

		}
		// $list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
    }

    // centrale code download diverse files.

    public function quotes($action, $onlymine, $id)
    {
    	//print_r($_SESSION);
		$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = "Quotes";
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			$module = $block;
			$list .= '<tr>
			 			<td><span class="lvtHeaderText">'.lang::get("LBL_QUOTE_INFORMATION").'</span</td>';
			$allow_all = $client->call('show_all',array('module'=>'Quotes'), SERVER_PATH, SERVER_PATH);

			if($allow_all == 'true'){
	      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; <select name="list_type" onchange="getList(this, \'Quotes\');">
	 			<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
				<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
				</select></td></tr>';
    		}

      		$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
		      		<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';

			$params = array('id' => "$customerid", 'block'=>"$block",'sessionid'=>"$sessionid",'onlymine'=>$onlymine);
			$result = $client->call('get_list_values', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
					<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
					</tr></table></td></tr></table></td></tr></table>';
				Session::set('loggedIn', 'false');
				header('location: '.URL.'login');
			}

			$list .= $this->getblock_fieldlistview($result,$block);
		}
		else
		{
			$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
			$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
			// Check for Authorization
			if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
				$list .= '<tr>
				<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
				</tr></table></td></tr></table></td></tr></table>';
	            Session::set('loggedIn', 'false');
				header('location: '.URL.'login');
			}
			$quoteinfo = $result[0][$block];
			$list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
			$list .= $this->getblock_fieldlist($quoteinfo);
			$list .= '</table></td></tr>';
			$list .= '</table></td></tr></table></td></tr></table>';
			$list .= '<!-- --End--  -->';
		}
		$list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
    }

    public function invoice($onlymine, $action, $status, $id)
    {
    	//print_r($_SESSION);
		$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block = "Invoice";
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			$module = $block;	

			$list .= '<tr>
			 			<td><span class="lvtHeaderText">'.lang::get("LBL_INVOICE_INFORMATION").'</span</td>';    
			$allow_all = $client->call('show_all', array('module'=>'Invoice'), SERVER_PATH, SERVER_PATH);
		    if($allow_all == 'true'){
	      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; <select name="list_type" onchange="getList(this, \'Invoice\');">
		 			<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
					<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
					</select></td></tr>';
	   		}
			      		
	   		$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
	      		<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';
			    					
			if ($customerid != '' )
			{
				$block = "Invoice";
				$params = array('id' => "$customerid", 'block'=>"$block",'sessionid'=>$sessionid,'onlymine'=>$onlymine);
				$result = $client->call('get_list_values', $params, SERVER_PATH, SERVER_PATH);
				$list .= $this->getblock_fieldlistview($result,$block);
			}			
		} 
		else 
		{
			if($status == 'false')
			{
				$filename=SERVER_PATH."/test/product/".$id."_Invoice.pdf"; // portal_purify(
				$this->downloadFile($id, $block, $filename);
				$list .= lang::get('LBL_PDF_CANNOT_GENERATE'); // We have to show the error message like "PDF output cannot be generated. Please contact admin"
			}
			else
			{
				$params = array('id' => "$id", 'block'=>"$block", 'contactid'=>"$customerid",'sessionid'=>"$sessionid");
				$result = $client->call('get_invoice_detail', $params, SERVER_PATH, SERVER_PATH);
				// Check for Authorization
				if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
					$list .= '<tr>
						<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
					</tr></table></td></tr></table></td></tr></table>';
					die();
				}
				$invinfo = $result[0][$block];
				$list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
				$list .= $this->getblock_fieldlist($invinfo);
				$list .= '<tr><td colspan ="4"><table width="100%">';
				$list .= '</table></td></tr>';	
				$list .= '</table></td></tr></table></td></tr></table>';
				$list .= '<!-- --End--  -->';
			} // else
		}  // $id != ''

		//$list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
    }        

    private function downloadFile($id, $block, $filename, $folderid='', $filesize='0', $fileType='', $ticketid='', $fileid='')
    {
/*		$filename = $_REQUEST['filename'];
		$fileType = $_REQUEST['filetype'];
		//$fileid = $_REQUEST['fileid'];
		$filesize = $_REQUEST['filesize'];
*/
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
        $client = $this->soap_client();
        //Added for enhancement from Rosa Weber

		if($block == 'Invoice' || $block == 'Quotes')
		{
			//$id=$_REQUEST['id'];
			//$block = $_REQUEST['module'];
			$params = array('id' => "$id", 'block'=>"$block", 'contactid'=>"$customerid",'sessionid'=>"$sessionid");
			$fileContent = $client->call('get_pdf', $params, SERVER_PATH, SERVER_PATH);
			$fileType ='application/pdf';
			$fileContent = $fileContent[0];
			$filesize = strlen(base64_decode($fileContent));
			$filename = "$block.pdf";

		}
		else if($block == 'Documents')
		{
			// $id=$_REQUEST['id'];
			// $folderid = $_REQUEST['folderid'];
			// $block = $_REQUEST['module'];
			$params = array('id' => "$id", 'folderid'=> "$folderid",'block'=>"$block", 'contactid'=>"$customerid",'sessionid'=>"$sessionid");
			$result = $client->call('get_filecontent_detail', $params, SERVER_PATH, SERVER_PATH);
			$fileType=$result[0]['filetype'];
			$filesize=$result[0]['filesize'];
			$filename=html_entity_decode($result[0]['filename']);
			$fileContent=$result[0]['filecontents'];
		}
		else
		{
			//$ticketid = $_REQUEST['ticketid'];
			//$fileid = $_REQUEST['fileid'];
			//we have to get the content by passing the customerid, fileid and filename
			$params = array(Array('id'=>$customerid,'fileid'=>$id,'filename'=>$filename,'sessionid'=>$sessionid,'ticketid'=>$ticketid));
			$fileContent = $client->call('get_filecontent', $params, SERVER_PATH, SERVER_PATH);
			$fileContent = $fileContent[0];
			$filesize = strlen(base64_decode($fileContent));

		}
		// : End

		//we have to get the content by passing the customerid, fileid and filename
		$customerid = $_SESSION['customer_id'];
		$sessionid = $_SESSION['customer_sessionid'];

		header("Content-type: $fileType");
		header("Content-length: $filesize");
		header("Cache-Control: private");
		header("Content-Disposition: attachment; filename=$filename");
		header("Content-Description: PHP Generated Data");
		echo base64_decode($fileContent);
		exit;
    }

public function documents($onlymine, $action, $id, $filename, $folderid, $extra)
    {
    	// print_r($_SESSION);
    	//												  $id
    	// bij download komt deze binnen:				 $folderid   $filename
    	// http://localhost/mvc/index/Documents  /  true/ 1         /com_vtpaccounts.zip/true/index/2211
		$this->action = $action;
    	$list = $this->fillblock_header(); // action moet hier leeg zijn.
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block= 'Documents';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($id == '')
		{
			if($onlymine == 'true') {
			    $mine_selected = 'selected';
			    $all_selected = '';
			} else {
			    $mine_selected = '';
			    $all_selected = 'selected';
			}

			$module = $block;

			$list .= '<tr>
	 			<td><span class="lvtHeaderText">'.lang::get("LBL_NOTES_INFORMATION").'</span</td>';
			$allow_all = $client->call('show_all',array('Documents'),SERVER_PATH, SERVER_PATH);

	    	if($allow_all == 'true'){
	      		$list .= '<td align="right" style="padding-right:50px;"> <b>'.lang::get('SHOW').'</b>&nbsp; <select name="list_type" onchange="getList(this, \'Documents\');">
	 			<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
				<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
				</select></td></tr>';
	    		}

	      		$list .= '<tr><td colspan="2"><hr noshade="noshade" size="1" width="100%" align="left">
	      		<table width="95%"  border="0" cellspacing="0" cellpadding="5" align="center">';

			if ($customerid != '' )
			{
				$params = array('id' => "$customerid", 'block'=>"$block",'sessionid'=>$sessionid,'onlymine'=>$onlymine);
				$result = $client->call('get_list_values', $params, SERVER_PATH, SERVER_PATH);
				$list .= $this->getblock_fieldlistview($result,$block);
			}
		}
		else
		{
			if($filename !== '')
			{
				// echo 'filename = '.$filename. ' block = '.$block. ' id = '.$id. ' folderid = '. $folderid.' onlymine = '.$onlymine.' action = '.$action.' extra = '.$extra;
				// die();
				// $this->downloadFile($id, $block, $filename, $folderid);
				if ($extra == '')
					$extra = Session::get('extra');
				$this->downloadFile($extra, $block, $id, $action);
				$list .= lang::get('LBL_PDF_CANNOT_GENERATE'); // We have to show the error message like "PDF output cannot be generated. Please contact admin"
			}
			else
			{
				Session::set('extra',$id);
				$params = array('id' => "$id", 'block'=>"$block",'contactid'=>$customerid,'sessionid'=>"$sessionid");
				$result = $client->call('get_details', $params, SERVER_PATH, SERVER_PATH);
				// Check for Authorization
				if (count($result) == 1 && $result[0] == "#NOT AUTHORIZED#") {
					$list .= '<tr>
						<td colspan="6" align="center"><b>'.lang::get('LBL_NOT_AUTHORISED').'</b></td>
					</tr></table></td></tr></table></td></tr></table>';
					die();
				}
				$noteinfo = $result[0][$block];

			    $list .= '<table><tr><td><input class="crmbutton small cancel" type="button" value="'.lang::get('LBL_BACK_BUTTON').'" onclick="window.history.back();"/></td></tr></table>';
				$list .= $this->getblock_fieldlist($noteinfo);

				$list .= '</table></td></tr>';
				$list .= '</table></td></tr></table></td></tr></table>';
				$list .= '<!-- --End--  -->';
			} // else
		}  // $id != ''

		$list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
    }

	public function faq($onlymine, $fun = '', $category_index, $productid, $search_text, $search_category, $faqid)
    {
    	// for R & D used:
    	// print_r($_SESSION);
    	// echo ' onlymine = '.$onlymine.' fun = '.$fun.' cat_index = '.$category_index. '  productid = '. $productid. '  search_text = '.$search_text.'  search_category = '.$search_category. ' faqid : '.$faqid;
 		if ($category_index == 'false') $category_index = '';
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$block= 'Faqs';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();
		$list = '';

		$module = $block;
		$product_array = [];

		//This is added first because when we add new comment, the comments will be added first and then Faq list will be retrieved
		if($fun == 'faq_updatecomment')
		{
			$comment = $_REQUEST['comments'];
			echo ' comment '.$comment;
			$this->SaveFaqComment($search_category, $comment);
			//include("Faq/SaveFaqComment.php");
			$fun = 'faq_detail';  // terug naar detail gaan.
		}

		$params = Array(Array('id' => "$customerid", 'sessionid'=>"$sessionid"));
		$result = $client->call('get_KBase_details', $params, SERVER_PATH, SERVER_PATH);

		$category_array = $result[0];
		$faq_array = $result[2];

		if(@array_key_exists('productid',$result[1][0]) && @array_key_exists('productname',$result[1][0]))
		        $product_array = $result[1];
		elseif(@array_key_exists('id',$result[1][0]) && @array_key_exists('question',$result[1][0]) && @array_key_exists('answer',$result[1][0]))
		        $faq_array = $result[1];

		$_SESSION['product_array'] = $product_array;
		$_SESSION['category_array'] = $category_array;
		$_SESSION['faq_array'] = $faq_array;

		$list .= $this->faq_html($faq_array, $product_array, $search_text, $category_array, $category_index, $productid);

		if($fun == '' || $fun == 'true')
		{
			if(!empty($faq_array))
				$list .= faq::getLatestlyCreatedFaqList();
		}
		elseif($fun == 'faqs')
		{
			if($category_index != '')
			{
				$list .= faq::ListFaqsPerCategory($category_index);
			}
			elseif($productid != '')
			{
				$list .= faq::ListFaqsPerProduct($productid);
			}
			else
			{
				$list .= 'Wrong parameters';
			}
		}
		elseif($fun == 'search')
		{
			$search_category = explode(":",$_REQUEST['search_category']);
			$searchlist = faq::getSearchResult($search_text,$search_category[1],$search_category[0]);
			$list .= $searchlist;
		}
		elseif($fun == 'faq_detail')
		{
			$list .= $this->faq_detail($search_category);
		}
		elseif($fun == 'faq_updatecomment')
		{
			?>
			<script>
				var faqid = <?php echo Zend_Json::encode($faqid); ?>;
				window.location.href = "index.php?module=Faq&action=index&fun=faq_detail&faqid="+faqid
			</script>
			<?php
		}


		//The following tags are opened in index.html
		$list .= '
					</td>
				   </tr>
				</table>
			</td>
		   </tr>
		</table>

		     ';


		$list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
    }

	/*********************************************************************************
	** The contents of this file are subject to the vtiger CRM Public License Version 1.0
	 * ("License"); You may not use this file except in compliance with the License
	 * The Original Code is:  vtiger CRM Open Source
	 * The Initial Developer of the Original Code is vtiger.
	 * Portions created by vtiger are Copyright (C) vtiger.
	 * All Rights Reserved.
	*
	 ********************************************************************************/
	private function SaveFaqComment($faqid, $comment)
	{
		//This is to save the comment made by the customer
		$client = $this->soap_client();
		$customerid = $_SESSION['customer_id'];
		$sessionid = $_SESSION['customer_sessionid'];

		//commented customer should be added as author for the comment
		$params = Array(Array('id' => "$customerid", 'sessionid'=>"$sessionid", 'faqid'=>"$faqid", 'comment'=>"$comment"));
		$result = $client->call('save_faq_comment', $params, SERVER_PATH, SERVER_PATH);
	}

	/*********************************************************************************
	** The contents of this file are subject to the vtiger CRM Public License Version 1.0
	 * ("License"); You may not use this file except in compliance with the License
	 * The Original Code is:  vtiger CRM Open Source
	 * The Initial Developer of the Original Code is vtiger.
	 * Portions created by vtiger are Copyright (C) vtiger.
	 * All Rights Reserved.
	*
	 ********************************************************************************/
	private function faq_html($faq_array, $product_array, $search_text, $category_array, $category_index, $productid)
	{            //  '.URL.'index/Faq/index/faq_detail/1/0/'.$search_text
		//$search_text = 'zoeken';
		$list = '
		<table class="dvtContentSpace" border="0" cellpadding="0" cellspacing="0" width="100%">
			<tr><td valign="top">&nbsp;</td>
			</tr>
			<tr>
				<td align="right" valign="top">
					<form name="Submit" method="POST" action="'.URL.'index/Faq/index/search/"'.$search_text.'>
						<input type="text" name="search_text" value="'.$search_text.'">&nbsp;in&nbsp; ';
						$list .= faq::getSearchCombo();
						$list .= '<input class= "crmbutton small cancel" type="submit" name="search" onclick="form.fun.value=\'search\'" value="'.lang::get('LBL_SEARCH').'">
					</form>
				</td>
		   </tr>
		   <tr><td align="left" valign="top"><span class=\'lvtHeaderText\'>'. lang::get('LBL_KNOWLEDGE_BASE').'</span></td></tr>
		   <tr>
				<td align="left" valign="top">
					<table cellpadding="0" cellspacing="0" class="mainTab">';

						if(!empty($faq_array)){
						$list .= '
						<tr>
							<td style="padding: 10px;width:20%;" valign="top">';
								if((count($category_array))>0 && $category_array !=null){
								$list .= '
								<table class="lftMnu" border="0" width="100%" cellspacing="0" cellpadding="0">
						   			<tr>
										<td><a href="javascript:;toggleView(\'category\')"><img id="categoryimg" src="'.URL.'public/images/minus.gif" border="0" align="absmiddle"></a></td>
										<td><a href="javascript:;toggleView(\'category\')"><img src="'.URL.'public/images/category.gif" border="0" align="absmiddle"></a></td>
										<td><a href="javascript:;toggleView(\'category\')" class="kbNavHead">'.lang::get('LNK_CATEGORY').'</a></td>
						   			</tr>
						   			<tr>
										<td></td>
										<td></td>
										<td>
											<div id="category" style="display:block">
											<table border="0" width="100%" cellspacing="0" cellpadding="0">';

													for($i=0,$j=1;$i<count($category_array);$i++,$j++){
									        			$noof_faqs = faq::getNoofFaqsPerCategory($category_array[$i]);
														//if(is_string($_REQUEST['category_index'])){
    														//$category_index = (int)$_REQUEST['category_index'];
     													//}
												$list .= '
								   				<tr>
													<td nowrap><a class="hdr" href="'.URL.'index/Faq/index/faqs/'.$i.'">';   // fun='faqs'&category_index='.$i.'
														if($category_index === $i)
																	$list .= '<b>'.faq::text_length($category_array[$i]).'</b>';
																else
																	$list .= faq::text_length($category_array[$i]);

														$list .= '</a> <span class="hdr">';

														 	if($category_index === $i)
																	$list .= '<b>'.'('.$noof_faqs.')'.'</b>';
																else
																	$list .= '('.$noof_faqs.')';
											$list .= '
													</span></td>
								   				</tr>';
											}
											$list .= '</table>
											</div>
										</td>
						   			</tr>
								</table>';
								}
								if($product_array != null) {
								$list .= '
								<table class="lftMnu" border="0" width="100%" cellspacing="0" cellpadding="0">
						   		<tr>
									<td><a href="javascript:;toggleView(\'products_array\')"><img id="products_arrayimg" src="'.URL.'public/images/minus.gif" border="0" align="absmiddle"></a></td>
									<td><a href="javascript:;toggleView(\'products_array\')"><img src="'.URL.'public/images/products.gif" border="0" align="absmiddle"></a></td>
									<td><a href="javascript:;toggleView(\'products_array\')" class="kbNavHead">'.lang::get('LNK_PRODUCTS').'</a></td>
						  		 </tr>
						  		 <tr>
									<td></td>
									<td></td>
									<td>
										<div id="products_array" style="display:block">
										<table border="0" width="100%" cellspacing="0" cellpadding="0"> ';

											for($i=0,$j=1;$i<count($product_array);$i++,$j++) {
												$noof_faqs = faq::getNoofFaqsPerProduct($product_array[$i]['productid']);
								   			$list .= '
								   			<tr>
												<td nowrap>
													<a class="hdr" href="'.URL.'index/Faq/index/faqs/false/'.$product_array[$i]['productid'].'">';
													if($productid == $product_array[$i]['productid'])
																$list .= '<b>'.$product_array[$i]['productname'].'</b>';
															else
																$list .= $product_array[$i]['productname'];

													$list .= '</a> <span class="hdr">';

													if($productid == $product_array[$i]['productid'])
																$list .= '<b>'.'('.$noof_faqs.')'.'</b>';
															else
																$list .= '('.$noof_faqs.')';
													$list .= '
													</span>
												</td>
								   			</tr>';
											}
										$list .= '</table>
										</div>
									</td>
						   		</tr>
							</table>';
							}
						$list .= '</td>
						<td style="padding:10px;width:80%" valign="top">';
					} else {
					$list .= '<tr>
						<td> ';
							$list .= lang::get('LBL_KNOWLEDGE_BASE').' '.lang::get('LBL_NOT_AVAILABLE').'

						</td>
					</tr>
					</table> ';
					}

		return $list;
	}

	private function faq_detail($faqid)
	{
		if($faqid != ''){
			$faqid = Zend_Json::decode($faqid);
		}
		$client = $this->soap_client();

		//print_r($_SESSION);
		$faq_array = $_SESSION['faq_array'];
		$customerid = $_SESSION['customer_id'];
		$sessionid = $_SESSION['customer_sessionid'];

		$list = '<table width="100%"  border="0" cellspacing="0" cellpadding="0" class="dummy">';
		for($i=0;$i<count($faq_array);$i++)
		{

			if($faqid == $faq_array[$i]['id'])
			{
				$faq_id = $faq_array[$i]['id'];
				$faq_module_no = $faq_array[$i]['faqno'];
				$faq_createdtime = $faq_array[$i]['faqcreatedtime'];
				$faq_modifiedtime = $faq_array[$i]['faqmodifiedtime'];
				$faq_productid = $faq_array[$i]['product_id'];
				$faq_category = $faq_array[$i]['category'];

				$comments_array = isset($_SESSION['faq_array'][$i]['comments']) ? $_SESSION['faq_array'][$i]['comments']: [];
				$createdtime_array = isset($_SESSION['faq_array'][$i]['createdtime']) ? $_SESSION['faq_array'][$i]['createdtime']: [];

				$comments_count = count($comments_array);

				$list .= '<tr><td colspan="2" class="detailedViewHeader">'.lang::get('LBL_FAQ_TITLE').'</td><td align="right" class="detailedViewHeader">
					  <span id="faq" class="lnkHdr" onMouseOver="fnShow(this)" onMouseOut="fnHideDiv(\'faqDetail\')">'.lang::get('LBL_FAQ_DETAIL').'</span></td></tr>';
				$list .= '<tr><td width="75%" valign="top" style="padding-right:5px;" colspan="3">'.$faq_array[$i]['question'];
				$list .= '<br><br><b>'.lang::get('LBL_ANSWER').'</b><br>'.$faq_array[$i]['answer'].'</td>
					    </tr>';

				$list .= '<tr><td colspan="3" class="detailedViewHeader">'.lang::get('LBL_COMMENTS').'</td></tr>';

				$list .= '
					   <tr>
						<td colspan="3">
						   <div id="scrollTab2">
							<table width="98%"  border="0" cellspacing="5" cellpadding="5">';

				for($j=0;$j<$comments_count;$j++)
				{
					$list .= '
							   <tr>
								<td width="5%" valign="top"> '.($comments_count-$j).' </td>
								<td width="95%">
									'.$comments_array[$j];

					if ($createdtime_array[$j]!="0000-00-00 00:00:00")
						$list .= '<br><span class="hdr">'.lang::get('LBL_ADDED_ON').$createdtime_array[$j].'</span>';

					$list .= '
								</td>
							   </tr>';
				}
				$list .= '
							</table>
						   </div>
						</td>
					   </tr>
					   <tr>
						<td>&nbsp;</td>
						<td>&nbsp;</td>
					   </tr>
						<tr><td colspan="3" class="detailedViewHeader">'.lang::get('LBL_DOCUMENTS').'</td></tr>';
							$module = 'Documents';
							$params = array('id' => "$faqid",'module'=>"$module", 'contactid'=>"$customerid",'sessionid'=>"$sessionid");
							$result = $client->call('get_documents', $params, SERVER_PATH, SERVER_PATH);
							$list .=  $this->getblock_fieldlistview($result,$module);
			   $list .='<tr>
						<td>&nbsp;</td>
						<td>&nbsp;</td>
					   </tr>
					   	' .
					   		'<form name="comments" method="POST" action="'.URL.'index/Faq/index/faq_updatecomment/1/0//1/'.$faqid.'">
						   <input type="hidden" name="module">
						   <input type="hidden" name="action">
						   <input type="hidden" name="fun">
						   <input type=hidden name=faqid value="'.$faqid.'">
					   <tr>
						<td colspan="3" class="detailedViewHeader">'.lang::get('LBL_ADD_COMMENT').'</td>
					   </tr>
					   <tr>
						<td colspan="3" class="dvtCellInfo">
							<textarea name="comments" cols="80" rows="5" class="detailedViewTextBox">&nbsp;</textarea>
						</td>
					   </tr>
						<tr>
						<td colspan="3" class="dvtCellInfo">
							<input title="'.lang::get('LBL_SAVE_ALT').'" accesskey="S" class="small"  name="submit" value="'.lang::get('LBL_SUBMIT').'" style="width: 70px;" type="submit" onclick="this.form.module.value=\'Faq\';this.form.action.value=\'index\';this.form.fun.value=\'faq_updatecomment\'; if(trim(this.form.comments.value) != \'\') return true; else return false;"/>
						</td>
					   </tr>
					   	<tr>
						<td colspan="2">&nbsp;</td>
					   </tr>
						</form>

					   <tr>
						<td style="padding:3px;">'.$this->getPageOption().'</td>
					   </tr>';
			}
		}
		return $list;
	}


/*
*   Here starts Helpdesk tools and modules / functions.
*/

	private function getPageOption()
	{
		$list = '
				<table width="100%" border="0" cellspacing="3" cellpadding="3">
			   	   <tr>
					<td width="18" align="center"><img src="'.URL.'public/images/print.gif" valign="absmiddle"></td><td><a href="javascript:printPage()">'.lang::get('LBL_PRINT_THIS_PAGE').'</a></td>
					<td width="18" align="center"><img src="'.URL.'public/images/email.gif" valign="absmiddle"></td><td><a href="javascript:sendAsEmail();">'.lang::get('LBL_EMAIL_THIS_PAGE').'</a></td>
					<td width="18" align="center"><img src="'.URL.'public/images/favorite.gif" valign="absmiddle"></td><td><a href="javascript:addToFavorite();">'.lang::get('LBL_ADD_TO_FAVORITES').'</a></td>
				   </tr>
				</table>
			';
		$list .= '<script language="JavaScript">
					function printPage() {
						window.print()
					}
					function sendAsEmail() {
						var emailBody=escape("'.lang::get('LBL_ARTICLE_INTERESTED').'"+String.fromCharCode(13)+String.fromCharCode(13)+"URL: "+document.location.href)
						document.location.href = "mailto:?body="+emailBody;
					}
					function addToFavorite() {
						if (document.all) {
							window.external.addFavorite(document.location.href,document.title);
						} else {
							alert("'.lang::get('LBL_PRESS_CNTR_D').'")
						}
					}
				</script>';

		return $list;
	}

    /**
     * @param $onlymine
     * @param string $fun
     * @param $category_index
     * @param $productid
     * @param $search_text
     * @param $search_category
     * @param $id
     * @return string
     */
    public function helpdesk($onlymine, $fun = '', $category_index = '', $productid = '', $search_text = '', $search_category = '', $id = '')
    {
    	$fun = (isset($_REQUEST['fun'])?$_REQUEST['fun']:$fun);
    	$onlymine = (isset($_REQUEST['onlymine'])?$_REQUEST['onlymine']:$onlymine);
		$show= (isset($_REQUEST['showstatus'])?$_REQUEST['showstatus']: $category_index);
    	// for R & D used:
    	// print_r($_SESSION);
    	// echo ' onlymine = '.$onlymine.' fun = '.$fun.' show = '.$show. '  productid = '. $productid. '  search_text = '.$search_text.'  search_category = '.$search_category. ' id : '.$id;
    	$list = $this->helpdesk_html($onlymine, $show);
        $customerid = Session::get('customer_id');
        $sessionid = Session::get('customer_sessionid');
		$username = Session::get('customer_name');
		$block= 'HelpDesk';
    	Session::set('tabArray',$block);

		$client = $this->soap_client();
		$params = array();

		if($onlymine == 'true') {
		    $mine_selected = 'selected';
		    $all_selected = '';
		} else {
		    $mine_selected = '';
		    $all_selected = 'selected';
		}

		$module = $block;

		if($fun == '' || $fun == 'true' || $fun == 'home' || $fun == 'search')
		{
			// This is an archaic parameter list
			$match_condition = (isset($_REQUEST['search_match']))?$_REQUEST['search_match']:'';
			$where = $this->getTicketSearchQuery();
			$params = Array(Array('id'=>"$customerid", 'sessionid'=>"$sessionid", 'user_name' => "$username", 'onlymine' => $onlymine, 'where' => "$where", 'match' => "$match_condition"));
			$result = $client->call('get_tickets_list', $params, SERVER_PATH, SERVER_PATH);
			$list .= $this->TicketsList($onlymine, $result, $show);
		}
		elseif($fun == 'newticket')
		{
			$list .= $this->NewTicket();
		}
		elseif($fun == 'updatecomment' || $fun == 'close_ticket' || $fun == 'uploadfile')
		{
			if($fun == 'updatecomment')
			{
				UpdateComment();
			}
			if($fun == 'close_ticket')
			{
				$ticketid = $_REQUEST['ticketid'];
				$res = Close_Ticket($ticketid);
			}
			if($fun == 'uploadfile')
			{
				$upload_status = AddAttachment();
				if($upload_status != ''){
					echo $upload_status;
					exit(0);
				}
			}

			?>
			<script>
				var ticketid = <?php echo Zend_Json::encode($_REQUEST['ticketid']); ?>;
				window.location.href = "index.php?module=HelpDesk&action=index&fun=detail&ticketid="+ticketid
			</script>
			<?php

		}
		elseif($fun == 'detail')
		{

			$ticketid = Zend_Json::decode($_REQUEST['ticketid']);
			$block = 'HelpDesk';
			include("TicketDetail.php");
		}
		elseif($fun == 'saveticket')
		{
			// include("SaveTicket.php");
            $ticket = Array(
                'title'=>'title',
                'productid'=>'productid',
                'description'=>'description',
                'priority'=>'priority',
                'category'=>'category',
                'owner'=>'owner',
                'module'=>'module'
            );

            foreach($ticket as $key => $val)
                $ticket[$key] = $_REQUEST[$key];

            $ticket['owner'] = $username;
            $ticket['productid'] = $_SESSION['combolist'][0]['productid'][$ticket['productid']];


            $title = $_REQUEST['title'];
            $description = $_REQUEST['description'];
            $priority = $_REQUEST['priority'];
            $severity = $_REQUEST['severity'];
            $category = $_REQUEST['category'];
            $parent_id = $_SESSION['customer_id'];
            $productid = $_SESSION['combolist'][0]['productid'][$_REQUEST['productid']];

            $module = $_REQUEST['ticket_module'];

            $customerid = $_SESSION['customer_id'];
            $sessionid = $_SESSION['customer_sessionid'];
            $serviceid = $_REQUEST['servicename'];

            $projectid = $_REQUEST['projectid'];

            $params = Array(Array(
                'id'=>"$customerid",
                'sessionid'=>"$sessionid",
                'title'=>"$title",
                'description'=>"$description",
                'priority'=>"$priority",
                'severity'=>"$severity",
                'category'=>"$category",
                'user_name' => "$username",
                'parent_id'=>"$parent_id",
                'product_id'=>"$productid",
                'module'=>"$module",
                'assigned_to'=>"$Ticket_Assigned_to",
                'serviceid'=>"$serviceid",
                'projectid'=>"$projectid"
            ));

            $record_result = $client->call('create_ticket', $params);
            if(isset($record_result[0]['new_ticket']) && $record_result[0]['new_ticket']['ticketid'] != '')
            {
                $new_record = 1;
                $ticketid = $record_result[0]['new_ticket']['ticketid'];
            }

            if($new_record == 1)
            {
                ?>
                <script>
                    var ticketid = <?php echo $ticketid; ?>;
                    window.location.href = "index.php?module=HelpDesk&action=index&fun=detail&ticketid="+ticketid
                </script>
            <?php
            }
            else
            {
                echo lang::get('LBL_PROBLEM_IN_TICKET_SAVING');
                // include("NewTicket.php");
                $list .= $this->NewTicket();
            }
		}

		$list .= '</table> </td></tr></table></td></tr></table>';
		return $list;
	}

	private function helpdesk_html($only_mine, $show = '')
	{
		$only_mine = (isset($_REQUEST['only_mine'])) ? " checked " : "";
		$list = '
		<table class="dvtContentSpace" border="0" cellpadding="0" cellspacing="0" width="100%">
		   <tr>
			<td align="left">
				<table border="0" cellpadding="0" cellspacing="0" width="100%">
				  <form name="index" method="post" action="'.URL.'index/HelpDesk/index/true">
				  <input type="hidden" name="module">
				  <input type="hidden" name="action">
				  <input type="hidden" name="fun">
				  <tr>
					<td style="padding:5px;">
						<table width="100%"  border="0" cellspacing="0" cellpadding="0">
						  <tr><td colspan="2">&nbsp;</td></tr>
						   <tr>
							<td align="left"> ';

		$list .= '
		<script>
		function verify_data(form,fldval)
		{
			com = trim(form.fldval.value);
			if(com != \'\')
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		function showTickets(form)
		{
			var showstatus = form.ticket_status_combo.value;
			var obj = form.only_mine_combo;
			var onlymine = true;
			if (obj != null) {
				var list_type = form.only_mine_combo.value;
				if (list_type == \'all\') {
				    onlymine = false;
				}
			}
			window.location.href = "'.URL.'index/HelpDesk/"+onlymine+"/home/"+showstatus;

		}

		</script>
		';
		return $list;
	}

    private function getTicketSearchQuery() {

		$where = '';
		if(trim(isset($_REQUEST['search_ticketid'])?$_REQUEST['search_ticketid']:'') != '')
		{
			$where .= "vtiger_troubletickets.ticketid = '".addslashes($_REQUEST['search_ticketid'])."'&&&";
		}
		if(trim(isset($_REQUEST['search_title'])?$_REQUEST['search_title']:'') != '')
		{
			//$where .= "vtiger_troubletickets.title = '".$_REQUEST['search_title']."'&&&";
			$where .= "vtiger_troubletickets.title like '%".addslashes(trim($_REQUEST['search_title']))."%'&&&";
		}

		if(trim(isset($_REQUEST['search_ticketstatus'])?$_REQUEST['search_ticketstatus']:'') != '')
		{
			$where .= "vtiger_troubletickets.status = '".$_REQUEST['search_ticketstatus']."'&&&";
		}
		if(trim(isset($_REQUEST['search_ticketpriority'])?$_REQUEST['search_ticketpriority']:'') != '')
		{
			$where .= "vtiger_troubletickets.priority = '".$_REQUEST['search_ticketpriority']."'&&&";
		}
		if(trim(isset($_REQUEST['search_ticketcategory'])?$_REQUEST['search_ticketcategory']:'') != '')
		{
			$where .= "vtiger_troubletickets.category = '".$_REQUEST['search_ticketcategory']."'&&&";
		}
		$where = trim($where,'&&&');
		return $where;
	}

    private function TicketsList($onlymine, $result, $showsel = '')
    {
		if($onlymine == 'true') {
		    $mine_selected = 'selected';
		    $all_selected = '';
		} else {
		    $mine_selected = '';
		    $all_selected = 'selected';
		}

		$client = $this->soap_client();
		//$params = array();

		$list = '
				<span class="lvtHeaderText">
				'.lang::get('SHOW').'&nbsp;</b>
					<select id="ticket_status_combo" onchange="this.form.module.value=\'HelpDesk\';this.form.action.value=\'index\';this.form.fun.value=\'home\'; showTickets(index)">
						'.$this->getStatusComboList($showsel).'
					</select>';
		$show = $client->call('show_all',array('module'=>'HelpDesk'), SERVER_PATH, SERVER_PATH);
		if($show == 'true'){
			$list .= '&nbsp; <select id="only_mine_combo" name="list_type" onchange="window.location.href = \''.URL.'index/Helpdesk/'.($mine_selected=='selected'?'false':'true').'/home/'.$showsel.'\'">
					<option value="mine" '. $mine_selected .'>'.lang::get('MINE').'</option>
					<option value="all"'. $all_selected .'>'.lang::get('ALL').'</option>
					</select>';
			}

		$list .= '	<td></td><td></td>
				    <td align="right"><input class="crmbutton small cancel" name="newticket" type="submit" value="'.lang::get('LBL_NEW_TICKET').'" onclick="this.form.module.value=\'HelpDesk\';this.form.action.value=\'index\';this.form.fun.value=\'newticket\'">&nbsp;&nbsp;&nbsp;
				    	<input class="crmbutton small cancel" name="srch" type="button" value="'.lang::get('LBL_SEARCH').'" onClick="showSearchFormNow(\'tabSrch\');">
				    </td>
				    </form>
				</tr>
				<tr>
					<td colspan="2">&nbsp;
					</td>
				</tr>
			</table>

		';

		$closedlist = '';
        $headerlist = '';

		if($result == '') {
			$list .= '<tr><td>';
			$list .= '<table width="100%" border="0" cellspacing="0" cellpadding="0" align="center">';
			$list .= '<tr><td class="pageTitle">'.lang::get('LBL_NONE_SUBMITTED').'</td></tr></table>';
			$list .= '</td></tr>';
		} else {

			$header = $result[0]['head'][0];
			$nooffields = count($header);
			$data = $result[1]['data'];
			$rowcount = count($data);
			$showstatus = isset($_REQUEST['showstatus'])?$_REQUEST['showstatus']:'';
				if($showstatus != '' && $rowcount >= 1) {
					$list .= '<tr><td colspan="1"><div id="scrollTab">';
					$list .= '<table width="100%" border="0" cellspacing="0" cellpadding="0" align="center">';
					$list .= '<tr><td class="mnu">'.lang::get($showstatus)." ".lang::get('LBL_TICKETS').' </td></tr></table>';
					$list .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">';
					$list .= '<tr>';

					for($i=0; $i<$nooffields; $i++)
					{
						$header_value = $header[$i]['fielddata'];
						$list .= '<td class="detailedViewHeader" align="center">'.$header_value.'</td>';
					}
					$list .= '</tr>';

					$ticketexist = 0;
					for($i=0;$i<count($data);$i++)
					{
						$ticketlist = '';

						if ($i%2==0)
							$ticketlist .= '<tr class="dvtLabel">';
						else
							$ticketlist .= '<tr class="dvtInfo">';

						$ticket_status = '';
						for($j=0; $j<$nooffields; $j++) {
							$ticketlist .= '<td>'.lang::get($data[$i][$j]['fielddata']).'</td>';
							if ($header[$j]['fielddata'] == 'Status') {
								$ticket_status = $data[$i][$j]['fielddata'];
							}
						}
					$ticketlist .= '</tr>';

					if($ticket_status == $showstatus){
						$list .= $ticketlist;
						$ticketexist++;
					}
				}
				if($ticketexist == 0)
				{
					$list .= '<tr><td>&nbsp;</td></tr><tr><td class="pageTitle">'.lang::get('LBL_NONE_SUBMITTED').'</td></tr>';
				}

				$list .= '</table>';

			}
			else {
				$list .= '<tr><td colspan="2"><div id="scrollTab">';
				$list .= '<table width="100%" border="0" cellspacing="0" cellpadding="0" align="center">';
				$list .= '<tr><td class="mnu">'.lang::get('LBL_MY_OPEN_TICKETS').'</td></tr></table>';
				$list .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">';
				$list .= '<tr>';

				$closedlist .= '<table width="100%" border="0" cellspacing="0" cellpadding="0" align="center">';
				$closedlist .= '<tr><td class="mnu">'.lang::get('LBL_CLOSED_TICKETS').'</td></tr></table>';
				$closedlist .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">';
				$closedlist .= '<tr>';

				for($i=0; $i<$nooffields; $i++)
				{
					$header_value = $header[$i]['fielddata'];
					$headerlist .= '<td class="detailedViewHeader" align="center">'.lang::get($header_value).'</td>';
				}
				$headerlist .= '</tr>';

				$list .= $headerlist;
				$closedlist .= $headerlist;

				for($i=0;$i<count($data);$i++)
				{
					$ticketlist = '';

					if ($i%2==0)
						$ticketlist .= '<tr class="dvtLabel">';
					else
						$ticketlist .= '<tr class="dvtInfo">';

					$ticket_status = '';
					for($j=0; $j<$nooffields; $j++) {
						$ticketlist .= '<td>'.$data[$i][$j]['fielddata'].'</td>';
						if ($header[$j]['fielddata'] == 'Status') {
							$ticket_status = $data[$i][$j]['fielddata'];
						}
					}
					$ticketlist .= '</tr>';

					if($ticket_status == lang::get('LBL_STATUS_CLOSED'))
						$closedlist .= $ticketlist;
					elseif($ticket_status != '')
						$list .= $ticketlist;
				}

				$list .= '</table>';
				$closedlist .= '</table>';

				$closedlist .= '</div></td></tr>';

				$list .= '<br><br>'.$closedlist;
			}
		}
		return $list;
    }

    private function getStatusComboList($selectedvalue='')
	{
		$temp_array = $this->getPicklist('ticketstatus');

		$status_combo = "<option value=''>".lang::get('LBL_ALL')."</option>";
		foreach($temp_array as $index => $val)
		{
			$select = '';
			if(str_replace(' ', '', $val) == $selectedvalue)
				$select = ' selected';

			$status_combo .= '<option value="'.$val.'"'.$select.'>'.lang::get($val).'</option>';
		}

		return $status_combo;
	}

    private function getPicklist($picklist_name)
	{

		// Static cache to re-use information
		static $_picklist_cache = array();
		if(isset($_picklist_cache[$picklist_name])) {
			return $_picklist_cache[$picklist_name];
		}

		// global $client,$Server_Path;
		$client = $this->soap_client();
		$params = array();
		$customerid = $_SESSION['customer_id'];
		$sessionid = $_SESSION['customer_sessionid'];

		$params = Array(Array('id'=>"$customerid", 'sessionid'=>"$sessionid", 'picklist_name'=>"$picklist_name"));
		$ticket_picklist_array = $client->call('get_picklists', $params, SERVER_PATH, SERVER_PATH);

		// Save the result for re-use
		$_picklist_cache[$picklist_name] = $ticket_picklist_array;

		return $ticket_picklist_array;
	}

	private function NewTicket()
	{
		$client = $this->soap_client();
		$productarray = '';
		$list = '';

		$customerid = $_SESSION['customer_id'];
		$sessionid = $_SESSION['customer_sessionid'];

		$params = Array(Array('id'=>"$customerid", 'sessionid'=>"$sessionid"));
		$result = $client->call('get_combo_values', $params, SERVER_PATH, SERVER_PATH);

		$_SESSION['combolist'] = $result;
		$combolist = $_SESSION['combolist'];
/*		echo '<pre>';
		print_r($result);
		echo '</pre>';
*/
		for($i=0;$i<count($result);$i++)
		{
			if (isset($result[$i]['productid']))
			{
				$productslist[0] = $result[$i]['productid'];
			}
			if (isset($result[$i]['productname']))
			{
				$productslist[1] = $result[$i]['productname'];
			}
			if (isset($result[$i]['ticketpriorities']))
			{
				$ticketpriorities = $result[$i]['ticketpriorities'];
			}
			if (isset($result[$i]['ticketseverities']))
			{
				$ticketseverities = $result[$i]['ticketseverities'];
			}
			if (isset($result[$i]['ticketcategories']))
			{
				$ticketcategories = $result[$i]['ticketcategories'];
			}
			if (isset($result[$i]['servicename']))
			{
				$servicename = $result[$i]['servicename'];
			}
			if (isset($result[$i]['serviceid']))
			{
				$serviceid= $result[$i]['serviceid'];
			}
		}

		if($productslist[0] != '#MODULE INACTIVE#'){
			$noofrows = count($productslist[0]);

			for($i=0;$i<$noofrows;$i++)
			{
				if($i > 0)
					$productarray .= ',';
				$productarray .= "'".$productslist[1][$i]."'";
			}
		}
		if($servicename == '#MODULE INACTIVE#' || $serviceid == '#MODULE INACTIVE#'){
			unset($servicename);
			unset($serviceid);
		}

		$list .= '
		<tr><td colspan="2">
		<table border="0" cellpadding="0" cellspacing="0" width="100%">
		   <tr>
			<td height="35">&nbsp;</td>
		   </tr>
		   <tr>
			<td align="left">
			   <span class="lvtHeaderText">&nbsp;&nbsp;'.lang::get('LBL_NEW_TICKET').'</span>
			   <hr noshade="noshade" size="1" width="90%" align="left"><br><br>
				<table width="80%"  border="0" cellspacing="0" cellpadding="5" align="center">
				   <form name="Save" method="post" action="index.php">
				   <input type="hidden" name="module" value="HelpDesk">
				   <input type="hidden" name="action" value="index">
				   <input type="hidden" name="fun" value="saveticket">
				   <input type="hidden" name="projectid" value="'.(isset($_REQUEST['projectid'])?$_REQUEST['projectid']:'').'" />
				   <tr>
					<td colspan="4" class="detailedViewHeader"><b>'.lang::get('LBL_NEW_TICKET').'</b></td></tr>
				   <tr>
					<td class="dvtCellLabel" align="right"><font color="red">*</font>'.lang::get('TICKET_TITLE').'</td>
					<td colspan="3" class="dvtCellInfo">
						<input type="text" name="title" class="detailedViewTextBox"  onFocus="this.className=\'detailedViewTextBoxOn\'" onBlur="this.className=\'detailedViewTextBox\'">
					</td>
				   </tr>
				   <tr>
					<td class="dvtCellLabel" align="right" width="20%">'.lang::get('LBL_PRODUCT_NAME').'</td>

					<!-- Product auto drop down - start -->
					<style>@import url( css/dropdown.css );</style>
					<script src="js/modomt.js"></script>
					<script src="js/getobject2.js"></script>
					<script src="js/acdropdown.js"></script>

					<script language="javascript">var products = new Array('.$productarray.');</script>

					<td class="dvtCellInfo" width="20%">
						<input class="dropdown" autocomplete="off" name="productid" id="inputer2" style="width: 135px;" acdropdown="true" autocomplete_list="array:products" autocomplete_list_sort="false" autocomplete_matchsubstring="true">
					<!-- Product auto drop down - end -->

					</td>
					<td class="dvtCellLabel" align="right" width="20%">'.lang::get('LBL_SERVICE_CONTRACTS').'</td>
					<td class="dvtCellInfo" width="20%">&nbsp;';

							$list .= '<select name=servicename size="1" class="detailedViewTextBox">';
								$list .= '<OPTION value="">'.lang::get('NONE').'</OPTION>';
							for($i=0;$i<count($servicename);$i++){
								$list .= '<OPTION value="'.$serviceid[$i].'" >'.$servicename[$i].'</OPTION>';
							}
							$list .= '</select>';
					$list .= '
					</td>
				   </tr>

				   <tr>
					<td class="dvtCellLabel" align="right">'.lang::get('LBL_TICKET_PRIORITY').'</td>
					<td class="dvtCellInfo">'.$this->getComboList('priority',$ticketpriorities).'
					</td>
					<td class="dvtCellLabel" align="right">"'.lang::get('LBL_TICKET_SEVERITY').'</td>
					<td class="dvtCellInfo">'.$this->getComboList('severity',$ticketseverities).'
					</td>
				   </tr>
				   <tr>
					<td class="dvtCellLabel" align="right">'.lang::get('LBL_TICKET_CATEGORY').'</td>
					<td class="dvtCellInfo">
						'.$this->getComboList('category',$ticketcategories).'
					</td>
					</tr>
				   <tr>
					<td class="dvtCellLabel" align="right">'.lang::get('LBL_DESCRIPTION').'</td>
					<td colspan="3" class="dvtCellInfo">
						<textarea name="description" cols="55" rows="5" class="detailedViewTextBox"  onFocus="this.className=\'detailedViewTextBoxOn\'" onBlur="this.className=\'detailedViewTextBox\'"></textarea>
					</td>
				   </tr>
				   <tr>
					<td>&nbsp;</td>
					<td>&nbsp;</td>
					<td>&nbsp;</td>
					<td>&nbsp;</td>
				   </tr>
				   <tr>
					<td>&nbsp;</td>
					<td colspan="2">
					   <div align="center">
						<input class="crmbutton small cancel" title="'.lang::get('LBL_SAVE_ALT').'" accesskey="S" class="small"  name="button" value="'.lang::get('LBL_SAVE').'" style="width: 70px;" type="submit" onclick="return formvalidate(this.form)">
						<input class="crmbutton small cancel" title="'.lang::get('LBL_CANCEL_ALT').'" accesskey="X" class="small" name="button" value="'.lang::get('LBL_CANCEL').'" style="width: 70px;" type="button" onclick="window.history.back()";>
					   </div>
					</td>
					<td>&nbsp;</td>
				   </tr>
					<tt><td colspan="4">&nbsp;</td></tt>
				   </form>
				</table>
			 </td>
		   </tr>
		</table>
		<script>
		function formvalidate(form)
		{
			if(trim(form.title.value) == \'\')
			{
				alert("Ticket Title is empty");
				return false;
			}
			return true;
		}
		function trim(s)
		{
			while (s.substring(0,1) == " ")
			{
				s = s.substring(1, s.length);
			}
			while (s.substring(s.length-1, s.length) == \' \')
			{
				s = s.substring(0,s.length-1);
			}

			return s;
		}
		</script> ';

		return $list;
	}

	private function getComboList($name, $value, $defaultval='', $selectval='')
	{
		$list = '<select name="'.$name.'" size="1" class="detailedViewTextBox">';

		//Add the default value as a first option
		if($defaultval != '')
			$list .= '<OPTION value="'.$defaultval.'">'.$defaultval.'</OPTION>';

		foreach($value as $index => $val)
		{
			$selected = '';
			if($selectval == $val)
				$selected = ' selected ';
			$list .= '<OPTION value="'.$val.'" '.$selected.'>'.$val.'</OPTION>';
		}
		$list .= '</select>';

		return $list;
	}
}